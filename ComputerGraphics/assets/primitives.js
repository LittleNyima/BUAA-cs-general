!function(e,r){"function"==typeof define&&define.amd?define(["./webgl-utils","./3d-math"],r):e.primitives=r.call(e)}(this,function(e,r){"use strict";function t(e){return"indices"!==e}function n(r){const n=r.indices,o={},c=n.length;return Object.keys(r).filter(t).forEach(function(t){const a=r[t],i=a.numComponents,s=e.createAugmentedTypedArray(i,c,a.constructor);for(let e=0;e<c;++e){const r=n[e]*i;for(let e=0;e<i;++e)s.push(a[r+e])}o[t]=s}),o}function o(e,r,t){const n=e.length,o=new Float32Array(3);for(let c=0;c<n;c+=3)t(r,[e[c],e[c+1],e[c+2]],o),e[c]=o[0],e[c+1]=o[1],e[c+2]=o[2]}function c(e,r,t){t=t||new Float32Array(3);const n=r[0],o=r[1],c=r[2];return t[0]=n*e[0]+o*e[1]+c*e[2],t[1]=n*e[4]+o*e[5]+c*e[6],t[2]=n*e[8]+o*e[9]+c*e[10],t}function a(e,t){return o(e,t,r.transformDirection),e}function i(e,t){return o(e,r.inverse(t),c),e}function s(e,t){return o(e,t,r.transformPoint),e}function u(e,r){return Object.keys(e).forEach(function(t){const n=e[t];t.indexOf("pos")>=0?s(n,r):t.indexOf("tan")>=0||t.indexOf("binorm")>=0?a(n,r):t.indexOf("norm")>=0&&i(n,r)}),e}function f(r,t){t=t||{};const n=r.position.numElements,o=e.createAugmentedTypedArray(4,n,Uint8Array),c=t.rand||function(e,r){return r<3?(t=256,Math.random()*t|0):255;var t};if(r.color=o,r.indices)for(let e=0;e<n;++e)o.push(c(e,0),c(e,1),c(e,2),c(e,3));else{const e=t.vertsPerColor||3,r=n/e;for(let t=0;t<r;++t){const r=[c(t,0),c(t,1),c(t,2),c(t,3)];for(let t=0;t<e;++t)o.push(r)}}return r}function d(r){return function(t){const n=r.apply(this,Array.prototype.slice.call(arguments,1));return e.createBuffersFromArrays(t,n)}}function l(r){return function(t){const n=r.apply(null,Array.prototype.slice.call(arguments,1));return e.createBufferInfoFromArrays(t,n)}}function p(t,n,o,c,a){t=t||1,n=n||1,o=o||1,c=c||1,a=a||r.identity();const i=(o+1)*(c+1),s=e.createAugmentedTypedArray(3,i),f=e.createAugmentedTypedArray(3,i),d=e.createAugmentedTypedArray(2,i);for(let e=0;e<=c;e++)for(let r=0;r<=o;r++){const a=r/o,i=e/c;s.push(t*a-.5*t,0,n*i-.5*n),f.push(0,1,0),d.push(a,i)}const l=o+1,p=e.createAugmentedTypedArray(3,o*c*2,Uint16Array);for(let e=0;e<c;e++)for(let r=0;r<o;r++)p.push((e+0)*l+r,(e+1)*l+r,(e+0)*l+r+1),p.push((e+1)*l+r,(e+1)*l+r+1,(e+0)*l+r+1);return u({position:s,normal:f,texcoord:d,indices:p},a)}function h(e,r,t){return e=e||2,{position:{numComponents:2,data:[(r=r||0)+-1*(e*=.5),(t=t||0)+-1*e,r+1*e,t+-1*e,r+-1*e,t+1*e,r+1*e,t+1*e]},normal:[0,0,1,0,0,1,0,0,1,0,0,1],texcoord:[0,0,1,0,0,1,1,1],indices:[0,1,2,2,1,3]}}function y(r,t,n,o,c,a,i){if(t<=0||n<=0)throw Error("subdivisionAxis and subdivisionHeight must be > 0");o=o||0,a=a||0;const s=(c=c||Math.PI)-o,u=(i=i||2*Math.PI)-a,f=(t+1)*(n+1),d=e.createAugmentedTypedArray(3,f),l=e.createAugmentedTypedArray(3,f),p=e.createAugmentedTypedArray(2,f);for(let e=0;e<=n;e++)for(let c=0;c<=t;c++){const i=c/t,f=e/n,h=u*i+a,y=s*f+o,A=Math.sin(h),m=Math.cos(h),g=Math.sin(y),T=m*g,x=Math.cos(y),B=A*g;d.push(r*T,r*x,r*B),l.push(T,x,B),p.push(1-i,f)}const h=t+1,y=e.createAugmentedTypedArray(3,t*n*2,Uint16Array);for(let e=0;e<t;e++)for(let r=0;r<n;r++)y.push((r+0)*h+e,(r+0)*h+e+1,(r+1)*h+e),y.push((r+1)*h+e,(r+0)*h+e+1,(r+1)*h+e+1);return{position:d,normal:l,texcoord:p,indices:y}}e=e||this.webglUtils,r=r||this.m4||math3d;const A=[[3,7,5,1],[6,2,0,4],[6,7,3,2],[0,1,5,4],[7,6,4,5],[2,3,1,0]];function m(r){const t=r/2,n=[[-t,-t,-t],[+t,-t,-t],[-t,+t,-t],[+t,+t,-t],[-t,-t,+t],[+t,-t,+t],[-t,+t,+t],[+t,+t,+t]],o=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],c=[[1,0],[0,0],[0,1],[1,1]],a=e.createAugmentedTypedArray(3,24),i=e.createAugmentedTypedArray(3,24),s=e.createAugmentedTypedArray(2,24),u=e.createAugmentedTypedArray(3,12,Uint16Array);for(let e=0;e<6;++e){const r=A[e];for(let t=0;t<4;++t){const u=n[r[t]],f=o[e],d=c[t];a.push(u),i.push(f),s.push(d)}const t=4*e;u.push(t+0,t+1,t+2),u.push(t+0,t+2,t+3)}return{position:a,normal:i,texcoord:s,indices:u}}function g(r,t,n,o,c,a,i){if(o<3)throw Error("radialSubdivisions must be 3 or greater");if(c<1)throw Error("verticalSubdivisions must be 1 or greater");const s=void 0===a||a,u=void 0===i||i,f=(s?2:0)+(u?2:0),d=(o+1)*(c+1+f),l=e.createAugmentedTypedArray(3,d),p=e.createAugmentedTypedArray(3,d),h=e.createAugmentedTypedArray(2,d),y=e.createAugmentedTypedArray(3,o*(c+f)*2,Uint16Array),A=o+1,m=Math.atan2(r-t,n),g=Math.cos(m),T=Math.sin(m),x=c+(u?2:0);for(let e=s?-2:0;e<=x;++e){let a,i=e/c,s=n*i;e<0?(s=0,i=1,a=r):e>c?(s=n,i=1,a=t):a=r+e/c*(t-r),-2!==e&&e!==c+2||(a=0,i=0),s-=n/2;for(let r=0;r<A;++r){const t=Math.sin(r*Math.PI*2/o),n=Math.cos(r*Math.PI*2/o);l.push(t*a,s,n*a),p.push(e<0||e>c?0:t*g,e<0?-1:e>c?1:T,e<0||e>c?0:n*g),h.push(r/o,1-i)}}for(let e=0;e<c+f;++e)for(let r=0;r<o;++r)y.push(A*(e+0)+0+r,A*(e+0)+1+r,A*(e+1)+1+r),y.push(A*(e+0)+0+r,A*(e+1)+1+r,A*(e+1)+0+r);return{position:l,normal:p,texcoord:h,indices:y}}function T(e,r){r=r||[];const t=[];for(let n=0;n<e.length;n+=4){const o=e[n],c=e.slice(n+1,n+4);c.push.apply(c,r);for(let e=0;e<o;++e)t.push.apply(t,c)}return t}function x(){const r=[0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0],t=T([18,0,0,1,18,0,0,-1,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,-1,0,6,-1,0,0]),n=T([18,200,70,120,18,80,70,200,6,70,200,210,6,200,200,70,6,210,100,70,6,210,160,70,6,70,180,210,6,100,70,210,6,76,210,100,6,140,210,80,6,90,130,110,6,160,160,220],[255]),o=r.length/3,c={position:e.createAugmentedTypedArray(3,o),texcoord:e.createAugmentedTypedArray(2,o),normal:e.createAugmentedTypedArray(3,o),color:e.createAugmentedTypedArray(4,o,Uint8Array),indices:e.createAugmentedTypedArray(3,o/3,Uint16Array)};c.position.push(r),c.texcoord.push([.22,.19,.22,.79,.34,.19,.22,.79,.34,.79,.34,.19,.34,.19,.34,.31,.62,.19,.34,.31,.62,.31,.62,.19,.34,.43,.34,.55,.49,.43,.34,.55,.49,.55,.49,.43,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0]),c.normal.push(t),c.color.push(n);for(let e=0;e<o;++e)c.indices.push(e);return c}function B(r){return function(t,...o){let c=r(...o);return c=f(c=n(c),{vertsPerColor:6,rand:function(e,r){return r<3?128+128*Math.random()|0:255}}),e.createBufferInfoFromArrays(t,c)}}return{create3DFBufferInfo:l(x),create3DFBuffer:d(x),create3DFVertices:x,create3DFWithVertexColorsBufferInfo:B(x),createCubeBufferInfo:l(m),createCubeBuffers:d(m),createCubeVertices:m,createCubeWithVertexColorsBufferInfo:B(m),createPlaneBufferInfo:l(p),createPlaneBuffers:d(p),createPlaneVertices:p,createPlaneWithVertexColorsBufferInfo:B(p),createXYQuadBufferInfo:l(h),createXYQuadBuffers:d(h),createXYQuadVertices:h,createXYQuadWithVertexColorsBufferInfo:B(h),createSphereBufferInfo:l(y),createSphereBuffers:d(y),createSphereVertices:y,createSphereWithVertexColorsBufferInfo:B(y),createTruncatedConeBufferInfo:l(g),createTruncatedConeBuffers:d(g),createTruncatedConeVertices:g,createTruncatedConeWithVertexColorsBufferInfo:B(g),deindexVertices:n,flattenNormals:function(e){if(e.indices)throw"can't flatten normals of indexed vertices. deindex them first";const r=e.normal,t=r.length;for(let e=0;e<t;e+=9){const t=r[e+0],n=r[e+1],o=r[e+2],c=r[e+3],a=r[e+4],i=r[e+5];let s=t+c+r[e+6],u=n+a+r[e+7],f=o+i+r[e+8];const d=Math.sqrt(s*s+u*u+f*f);s/=d,u/=d,f/=d,r[e+0]=s,r[e+1]=u,r[e+2]=f,r[e+3]=s,r[e+4]=u,r[e+5]=f,r[e+6]=s,r[e+7]=u,r[e+8]=f}return e},makeRandomVertexColors:f,reorientDirections:a,reorientNormals:i,reorientPositions:s,reorientVertices:u}});